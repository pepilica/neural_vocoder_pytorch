defaults:
  - model: hifigan
  - writer: wandb
  - metrics: hifigan
  - datasets: hifigan_train
  - dataloader: example
  - transforms: hifigan
  - _self_
generator_optimizer: 
  _target_: torch.optim.AdamW
  lr: 0.00005
  betas: [0.8, 0.99]
discriminator_optimizer: 
  _target_: torch.optim.AdamW
  lr: 0.0002
  betas: [0.8, 0.99]
optimizer:
  _target_: src.model.hifigan.gan_optimizers.GANOptimizer
generator_lr_scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.999
discriminator_lr_scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.999
lr_scheduler:
  _target_: src.model.hifigan.gan_optimizers.GANLRScheduler
loss_function:
  _target_: src.loss.HiFiGANLoss
trainer:
  log_step: 50
  n_epochs: 100
  epoch_len: 1000
  device_tensors: ["audio", "mel_spec"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_loss" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
